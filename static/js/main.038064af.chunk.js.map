{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constans.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","feedback","type","onClick","FeedbackButton","PropTypes","arrayOf","string","func","isRequired","Notification","message","protoTypes","Statistics","good","neutral","bad","total","positivePercantage","FEEDBACK_OPTIONS","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositivePercantage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,M,gBCIPC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OATA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAChC,OACI,wBAAQI,KAAK,SAAS,gBAAeD,EAAUE,QAASL,EAAxD,SACKG,IAMsBG,CAAe,CAAEH,SAAUD,EAAQF,wBAGtEF,EAAgBS,UAAY,CACxBR,QAASQ,IAAUC,QAAQD,IAAUE,QACrCT,gBAAiBO,IAAUG,KAAKC,YAGrBb,QCjBTc,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,WAAa,CACtBD,QAASN,IAAUE,OAAOE,YAGfC,QCqBAG,EAzBI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC7C,OACI,qCACKD,EAAQ,GACL,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,uDAA0BC,QAGrB,IAAVD,GAAe,cAAC,EAAD,CAAcN,QAAQ,0BChBrCQ,EAAmB,CAAC,OAAQ,UAAW,OCQ9CC,E,4MACJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,eAAiB,YAAiB,IACtBrB,EADqB,EAAbsB,OACYC,QAApBvB,SACR,EAAKwB,UAAS,SAACC,GAAD,sBAAmBzB,EAAWyB,EAAUzB,GAAY,O,EAGtE0B,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQP,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBY,wBAA0B,WACxB,IAAQd,EAAS,EAAKO,MAAdP,KACFG,EAAQ,EAAKU,qBACnB,OAAOV,EAAQY,KAAKC,MAAOhB,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+Bc,KAAKV,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQc,KAAKJ,qBACbT,EAAqBa,KAAKH,0BAEhC,OACA,gCACE,cAAC,EAAD,CAASlC,MAAM,uBAAf,SACE,cAAC,EAAD,CAAiBG,QAASsB,EAAkBrB,gBAAiBiC,KAAKT,mBAEpE,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACE,cAAC,EAAD,CACAoB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAvCVc,aA+CHZ,ICnDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.038064af.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Section = ({ title, children }) => {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n}\n\nexport default Section","import PropTypes from 'prop-types'\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n    return (\n        <button type='button' data-feedback={feedback} onClick={onLeaveFeedback}>\n            {feedback}\n        </button>\n    )\n}\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return options.map((option) => FeedbackButton({ feedback: option, onLeaveFeedback}))\n}\n\nFeedbackOptions.PropTypes = {\n    options: PropTypes.arrayOf(PropTypes.string),\n    onLeaveFeedback: PropTypes.func.isRequired,\n}\n\nexport default FeedbackOptions","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>\n\nNotification.protoTypes = {\n    message: PropTypes.string.isRequired,\n}\n\nexport default Notification","import PropTypes from 'prop-types';\n\nimport Notification from '../Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercantage}) => {\n    return (\n        <>\n            {total > 0 && (\n                <ul>\n                  <li>Good: {good}</li>\n                  <li>Neutral: {neutral}</li>\n                  <li>Bad: {bad}</li>\n                  <li>Total: {total}</li>\n                  <li>Positive Percantage: {positivePercantage}</li>  \n                </ul>\n            )}\n            {total === 0 && <Notification message='No Feedback given' />}\n        </>\n    )\n}\n\n  Statistics.propTypes = {\n      good: PropTypes.number.isRequired,\n      neutral: PropTypes.number.isRequired,\n      bad: PropTypes.number.isRequired,\n      total: PropTypes.number.isRequired,\n      positivePercantage: PropTypes.number.isRequired,\n  }\n\nexport default Statistics","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad']","import { Component } from 'react'\n\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\n\nimport { FEEDBACK_OPTIONS } from '../data/constans'\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  handleFeedback = ({ target }) => {\n      const { feedback } = target.dataset\n      this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1})) \n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state\n    return good + neutral + bad\n  }\n\n  countPositivePercantage = () => {\n    const { good } = this.state\n    const total = this.countTotalFeedback()\n    return total ? Math.round((good / total) * 100) : 0\n  } \n\n  render () {\n    const { good, neutral, bad } = this.state\n    const total = this.countTotalFeedback()\n    const positivePercantage = this.countPositivePercantage()\n    \n    return (\n    <div>\n      <Section title='Please leavefeedback'>\n        <FeedbackOptions options={FEEDBACK_OPTIONS} onLeaveFeedback={this.handleFeedback} />\n      </Section>\n      <Section title='Statistics'>\n        <Statistics \n        good={good} \n        neutral={neutral} \n        bad={bad} \n        total={total} \n        positivePercantage={positivePercantage}  \n        />\n      </Section>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}